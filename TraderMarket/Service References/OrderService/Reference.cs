//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TraderMarket.OrderService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="OrderService.IOrderService")]
    public interface IOrderService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/AddOrderDetails", ReplyAction="http://tempuri.org/IOrderService/AddOrderDetailsResponse")]
        void AddOrderDetails(int orderid, int productid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/AddOrderDetails", ReplyAction="http://tempuri.org/IOrderService/AddOrderDetailsResponse")]
        System.Threading.Tasks.Task AddOrderDetailsAsync(int orderid, int productid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/AddOrder", ReplyAction="http://tempuri.org/IOrderService/AddOrderResponse")]
        void AddOrder(string email, decimal number);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/AddOrder", ReplyAction="http://tempuri.org/IOrderService/AddOrderResponse")]
        System.Threading.Tasks.Task AddOrderAsync(string email, decimal number);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/LastOrder", ReplyAction="http://tempuri.org/IOrderService/LastOrderResponse")]
        Commonlayer.Views.OrderView LastOrder();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/LastOrder", ReplyAction="http://tempuri.org/IOrderService/LastOrderResponse")]
        System.Threading.Tasks.Task<Commonlayer.Views.OrderView> LastOrderAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetOrderedProduct", ReplyAction="http://tempuri.org/IOrderService/GetOrderedProductResponse")]
        Commonlayer.Views.OrderedProducts GetOrderedProduct(string email, int productid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetOrderedProduct", ReplyAction="http://tempuri.org/IOrderService/GetOrderedProductResponse")]
        System.Threading.Tasks.Task<Commonlayer.Views.OrderedProducts> GetOrderedProductAsync(string email, int productid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetProductsOfUser", ReplyAction="http://tempuri.org/IOrderService/GetProductsOfUserResponse")]
        Commonlayer.Views.OrderedProducts[] GetProductsOfUser(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetProductsOfUser", ReplyAction="http://tempuri.org/IOrderService/GetProductsOfUserResponse")]
        System.Threading.Tasks.Task<Commonlayer.Views.OrderedProducts[]> GetProductsOfUserAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetOrder", ReplyAction="http://tempuri.org/IOrderService/GetOrderResponse")]
        Commonlayer.Views.OrderView GetOrder(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetOrder", ReplyAction="http://tempuri.org/IOrderService/GetOrderResponse")]
        System.Threading.Tasks.Task<Commonlayer.Views.OrderView> GetOrderAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetOrderID", ReplyAction="http://tempuri.org/IOrderService/GetOrderIDResponse")]
        int GetOrderID(int productID, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetOrderID", ReplyAction="http://tempuri.org/IOrderService/GetOrderIDResponse")]
        System.Threading.Tasks.Task<int> GetOrderIDAsync(int productID, string email);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IOrderServiceChannel : TraderMarket.OrderService.IOrderService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OrderServiceClient : System.ServiceModel.ClientBase<TraderMarket.OrderService.IOrderService>, TraderMarket.OrderService.IOrderService {
        
        public OrderServiceClient() {
        }
        
        public OrderServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public OrderServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OrderServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OrderServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AddOrderDetails(int orderid, int productid) {
            base.Channel.AddOrderDetails(orderid, productid);
        }
        
        public System.Threading.Tasks.Task AddOrderDetailsAsync(int orderid, int productid) {
            return base.Channel.AddOrderDetailsAsync(orderid, productid);
        }
        
        public void AddOrder(string email, decimal number) {
            base.Channel.AddOrder(email, number);
        }
        
        public System.Threading.Tasks.Task AddOrderAsync(string email, decimal number) {
            return base.Channel.AddOrderAsync(email, number);
        }
        
        public Commonlayer.Views.OrderView LastOrder() {
            return base.Channel.LastOrder();
        }
        
        public System.Threading.Tasks.Task<Commonlayer.Views.OrderView> LastOrderAsync() {
            return base.Channel.LastOrderAsync();
        }
        
        public Commonlayer.Views.OrderedProducts GetOrderedProduct(string email, int productid) {
            return base.Channel.GetOrderedProduct(email, productid);
        }
        
        public System.Threading.Tasks.Task<Commonlayer.Views.OrderedProducts> GetOrderedProductAsync(string email, int productid) {
            return base.Channel.GetOrderedProductAsync(email, productid);
        }
        
        public Commonlayer.Views.OrderedProducts[] GetProductsOfUser(string email) {
            return base.Channel.GetProductsOfUser(email);
        }
        
        public System.Threading.Tasks.Task<Commonlayer.Views.OrderedProducts[]> GetProductsOfUserAsync(string email) {
            return base.Channel.GetProductsOfUserAsync(email);
        }
        
        public Commonlayer.Views.OrderView GetOrder(int id) {
            return base.Channel.GetOrder(id);
        }
        
        public System.Threading.Tasks.Task<Commonlayer.Views.OrderView> GetOrderAsync(int id) {
            return base.Channel.GetOrderAsync(id);
        }
        
        public int GetOrderID(int productID, string email) {
            return base.Channel.GetOrderID(productID, email);
        }
        
        public System.Threading.Tasks.Task<int> GetOrderIDAsync(int productID, string email) {
            return base.Channel.GetOrderIDAsync(productID, email);
        }
    }
}
