//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TraderMarket.OrderService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderView", Namespace="http://schemas.datacontract.org/2004/07/Commonlayer.Views")]
    [System.SerializableAttribute()]
    public partial class OrderView : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OrderStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameSellerField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Date {
            get {
                return this.DateField;
            }
            set {
                if ((object.ReferenceEquals(this.DateField, value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderID {
            get {
                return this.OrderIDField;
            }
            set {
                if ((this.OrderIDField.Equals(value) != true)) {
                    this.OrderIDField = value;
                    this.RaisePropertyChanged("OrderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> OrderStatus {
            get {
                return this.OrderStatusField;
            }
            set {
                if ((this.OrderStatusField.Equals(value) != true)) {
                    this.OrderStatusField = value;
                    this.RaisePropertyChanged("OrderStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UsernameSeller {
            get {
                return this.UsernameSellerField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameSellerField, value) != true)) {
                    this.UsernameSellerField = value;
                    this.RaisePropertyChanged("UsernameSeller");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderedProducts", Namespace="http://schemas.datacontract.org/2004/07/Commonlayer.Views")]
    [System.SerializableAttribute()]
    public partial class OrderedProducts : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] NotSignedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProductIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] SignedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] NotSigned {
            get {
                return this.NotSignedField;
            }
            set {
                if ((object.ReferenceEquals(this.NotSignedField, value) != true)) {
                    this.NotSignedField = value;
                    this.RaisePropertyChanged("NotSigned");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderedDate {
            get {
                return this.OrderedDateField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderedDateField, value) != true)) {
                    this.OrderedDateField = value;
                    this.RaisePropertyChanged("OrderedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductID {
            get {
                return this.ProductIDField;
            }
            set {
                if ((this.ProductIDField.Equals(value) != true)) {
                    this.ProductIDField = value;
                    this.RaisePropertyChanged("ProductID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Signed {
            get {
                return this.SignedField;
            }
            set {
                if ((object.ReferenceEquals(this.SignedField, value) != true)) {
                    this.SignedField = value;
                    this.RaisePropertyChanged("Signed");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="OrderService.IOrderService")]
    public interface IOrderService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/AddOrderDetails", ReplyAction="http://tempuri.org/IOrderService/AddOrderDetailsResponse")]
        void AddOrderDetails(int orderid, int productid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/AddOrderDetails", ReplyAction="http://tempuri.org/IOrderService/AddOrderDetailsResponse")]
        System.Threading.Tasks.Task AddOrderDetailsAsync(int orderid, int productid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/AddOrder", ReplyAction="http://tempuri.org/IOrderService/AddOrderResponse")]
        void AddOrder(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/AddOrder", ReplyAction="http://tempuri.org/IOrderService/AddOrderResponse")]
        System.Threading.Tasks.Task AddOrderAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/LastOrder", ReplyAction="http://tempuri.org/IOrderService/LastOrderResponse")]
        TraderMarket.OrderService.OrderView LastOrder();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/LastOrder", ReplyAction="http://tempuri.org/IOrderService/LastOrderResponse")]
        System.Threading.Tasks.Task<TraderMarket.OrderService.OrderView> LastOrderAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetOrderedProduct", ReplyAction="http://tempuri.org/IOrderService/GetOrderedProductResponse")]
        TraderMarket.OrderService.OrderedProducts GetOrderedProduct(string email, int productid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetOrderedProduct", ReplyAction="http://tempuri.org/IOrderService/GetOrderedProductResponse")]
        System.Threading.Tasks.Task<TraderMarket.OrderService.OrderedProducts> GetOrderedProductAsync(string email, int productid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetProductsOfUser", ReplyAction="http://tempuri.org/IOrderService/GetProductsOfUserResponse")]
        TraderMarket.OrderService.OrderedProducts[] GetProductsOfUser(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetProductsOfUser", ReplyAction="http://tempuri.org/IOrderService/GetProductsOfUserResponse")]
        System.Threading.Tasks.Task<TraderMarket.OrderService.OrderedProducts[]> GetProductsOfUserAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetOrder", ReplyAction="http://tempuri.org/IOrderService/GetOrderResponse")]
        TraderMarket.OrderService.OrderView GetOrder(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetOrder", ReplyAction="http://tempuri.org/IOrderService/GetOrderResponse")]
        System.Threading.Tasks.Task<TraderMarket.OrderService.OrderView> GetOrderAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetOrderID", ReplyAction="http://tempuri.org/IOrderService/GetOrderIDResponse")]
        int GetOrderID(int productID, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetOrderID", ReplyAction="http://tempuri.org/IOrderService/GetOrderIDResponse")]
        System.Threading.Tasks.Task<int> GetOrderIDAsync(int productID, string email);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IOrderServiceChannel : TraderMarket.OrderService.IOrderService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OrderServiceClient : System.ServiceModel.ClientBase<TraderMarket.OrderService.IOrderService>, TraderMarket.OrderService.IOrderService {
        
        public OrderServiceClient() {
        }
        
        public OrderServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public OrderServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OrderServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OrderServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AddOrderDetails(int orderid, int productid) {
            base.Channel.AddOrderDetails(orderid, productid);
        }
        
        public System.Threading.Tasks.Task AddOrderDetailsAsync(int orderid, int productid) {
            return base.Channel.AddOrderDetailsAsync(orderid, productid);
        }
        
        public void AddOrder(string email) {
            base.Channel.AddOrder(email);
        }
        
        public System.Threading.Tasks.Task AddOrderAsync(string email) {
            return base.Channel.AddOrderAsync(email);
        }
        
        public TraderMarket.OrderService.OrderView LastOrder() {
            return base.Channel.LastOrder();
        }
        
        public System.Threading.Tasks.Task<TraderMarket.OrderService.OrderView> LastOrderAsync() {
            return base.Channel.LastOrderAsync();
        }
        
        public TraderMarket.OrderService.OrderedProducts GetOrderedProduct(string email, int productid) {
            return base.Channel.GetOrderedProduct(email, productid);
        }
        
        public System.Threading.Tasks.Task<TraderMarket.OrderService.OrderedProducts> GetOrderedProductAsync(string email, int productid) {
            return base.Channel.GetOrderedProductAsync(email, productid);
        }
        
        public TraderMarket.OrderService.OrderedProducts[] GetProductsOfUser(string email) {
            return base.Channel.GetProductsOfUser(email);
        }
        
        public System.Threading.Tasks.Task<TraderMarket.OrderService.OrderedProducts[]> GetProductsOfUserAsync(string email) {
            return base.Channel.GetProductsOfUserAsync(email);
        }
        
        public TraderMarket.OrderService.OrderView GetOrder(int id) {
            return base.Channel.GetOrder(id);
        }
        
        public System.Threading.Tasks.Task<TraderMarket.OrderService.OrderView> GetOrderAsync(int id) {
            return base.Channel.GetOrderAsync(id);
        }
        
        public int GetOrderID(int productID, string email) {
            return base.Channel.GetOrderID(productID, email);
        }
        
        public System.Threading.Tasks.Task<int> GetOrderIDAsync(int productID, string email) {
            return base.Channel.GetOrderIDAsync(productID, email);
        }
    }
}
