//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TraderMarket.ProdService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProdService.IProdService")]
    public interface IProdService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProdService/GetProducts", ReplyAction="http://tempuri.org/IProdService/GetProductsResponse")]
        Commonlayer.Views.ProductView[] GetProducts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProdService/GetProducts", ReplyAction="http://tempuri.org/IProdService/GetProductsResponse")]
        System.Threading.Tasks.Task<Commonlayer.Views.ProductView[]> GetProductsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProdService/GetProduct", ReplyAction="http://tempuri.org/IProdService/GetProductResponse")]
        Commonlayer.Product GetProduct(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProdService/GetProduct", ReplyAction="http://tempuri.org/IProdService/GetProductResponse")]
        System.Threading.Tasks.Task<Commonlayer.Product> GetProductAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProdService/GetProductsAccordingToSubCategory", ReplyAction="http://tempuri.org/IProdService/GetProductsAccordingToSubCategoryResponse")]
        Commonlayer.Views.ProductView[] GetProductsAccordingToSubCategory(System.Nullable<int> CatID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProdService/GetProductsAccordingToSubCategory", ReplyAction="http://tempuri.org/IProdService/GetProductsAccordingToSubCategoryResponse")]
        System.Threading.Tasks.Task<Commonlayer.Views.ProductView[]> GetProductsAccordingToSubCategoryAsync(System.Nullable<int> CatID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProdService/GetCategories", ReplyAction="http://tempuri.org/IProdService/GetCategoriesResponse")]
        Commonlayer.Views.CategoryView[] GetCategories();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProdService/GetCategories", ReplyAction="http://tempuri.org/IProdService/GetCategoriesResponse")]
        System.Threading.Tasks.Task<Commonlayer.Views.CategoryView[]> GetCategoriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProdService/ControlStock", ReplyAction="http://tempuri.org/IProdService/ControlStockResponse")]
        void ControlStock(int productid, int stock);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProdService/ControlStock", ReplyAction="http://tempuri.org/IProdService/ControlStockResponse")]
        System.Threading.Tasks.Task ControlStockAsync(int productid, int stock);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProdService/AddProducttoCart", ReplyAction="http://tempuri.org/IProdService/AddProducttoCartResponse")]
        void AddProducttoCart(string username, int productId, int qty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProdService/AddProducttoCart", ReplyAction="http://tempuri.org/IProdService/AddProducttoCartResponse")]
        System.Threading.Tasks.Task AddProducttoCartAsync(string username, int productId, int qty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProdService/GetProductsinShoppingCart", ReplyAction="http://tempuri.org/IProdService/GetProductsinShoppingCartResponse")]
        Commonlayer.Views.ShoppingCartView[] GetProductsinShoppingCart(string Username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProdService/GetProductsinShoppingCart", ReplyAction="http://tempuri.org/IProdService/GetProductsinShoppingCartResponse")]
        System.Threading.Tasks.Task<Commonlayer.Views.ShoppingCartView[]> GetProductsinShoppingCartAsync(string Username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProdService/UpdateCart", ReplyAction="http://tempuri.org/IProdService/UpdateCartResponse")]
        void UpdateCart(string username, int productId, int newQty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProdService/UpdateCart", ReplyAction="http://tempuri.org/IProdService/UpdateCartResponse")]
        System.Threading.Tasks.Task UpdateCartAsync(string username, int productId, int newQty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProdService/DecrementCart", ReplyAction="http://tempuri.org/IProdService/DecrementCartResponse")]
        void DecrementCart(string username, int productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProdService/DecrementCart", ReplyAction="http://tempuri.org/IProdService/DecrementCartResponse")]
        System.Threading.Tasks.Task DecrementCartAsync(string username, int productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProdService/DeleteShoppingCartEntry", ReplyAction="http://tempuri.org/IProdService/DeleteShoppingCartEntryResponse")]
        void DeleteShoppingCartEntry(string username, int productid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProdService/DeleteShoppingCartEntry", ReplyAction="http://tempuri.org/IProdService/DeleteShoppingCartEntryResponse")]
        System.Threading.Tasks.Task DeleteShoppingCartEntryAsync(string username, int productid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProdService/GetProductV", ReplyAction="http://tempuri.org/IProdService/GetProductVResponse")]
        Commonlayer.Views.ProductView GetProductV(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProdService/GetProductV", ReplyAction="http://tempuri.org/IProdService/GetProductVResponse")]
        System.Threading.Tasks.Task<Commonlayer.Views.ProductView> GetProductVAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProdService/GetProductID", ReplyAction="http://tempuri.org/IProdService/GetProductIDResponse")]
        int GetProductID(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProdService/GetProductID", ReplyAction="http://tempuri.org/IProdService/GetProductIDResponse")]
        System.Threading.Tasks.Task<int> GetProductIDAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProdService/CheckStock", ReplyAction="http://tempuri.org/IProdService/CheckStockResponse")]
        bool CheckStock(int productid, int stock);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProdService/CheckStock", ReplyAction="http://tempuri.org/IProdService/CheckStockResponse")]
        System.Threading.Tasks.Task<bool> CheckStockAsync(int productid, int stock);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProdService/GetStock", ReplyAction="http://tempuri.org/IProdService/GetStockResponse")]
        int GetStock(int productID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProdService/GetStock", ReplyAction="http://tempuri.org/IProdService/GetStockResponse")]
        System.Threading.Tasks.Task<int> GetStockAsync(int productID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProdService/GetProductsList", ReplyAction="http://tempuri.org/IProdService/GetProductsListResponse")]
        Commonlayer.Views.ProductView[] GetProductsList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProdService/GetProductsList", ReplyAction="http://tempuri.org/IProdService/GetProductsListResponse")]
        System.Threading.Tasks.Task<Commonlayer.Views.ProductView[]> GetProductsListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProdService/AddProduct", ReplyAction="http://tempuri.org/IProdService/AddProductResponse")]
        void AddProduct(string name, string desc, int catid, string imageLink, decimal price, int stock);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProdService/AddProduct", ReplyAction="http://tempuri.org/IProdService/AddProductResponse")]
        System.Threading.Tasks.Task AddProductAsync(string name, string desc, int catid, string imageLink, decimal price, int stock);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProdService/DeleteProduct", ReplyAction="http://tempuri.org/IProdService/DeleteProductResponse")]
        void DeleteProduct(int productID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProdService/DeleteProduct", ReplyAction="http://tempuri.org/IProdService/DeleteProductResponse")]
        System.Threading.Tasks.Task DeleteProductAsync(int productID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProdService/UpdateProduct", ReplyAction="http://tempuri.org/IProdService/UpdateProductResponse")]
        void UpdateProduct(int prodid, string name, string desc, int catid, string imageLink, decimal price, int stock);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProdService/UpdateProduct", ReplyAction="http://tempuri.org/IProdService/UpdateProductResponse")]
        System.Threading.Tasks.Task UpdateProductAsync(int prodid, string name, string desc, int catid, string imageLink, decimal price, int stock);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProdService/GetProductsAccordingToSeller", ReplyAction="http://tempuri.org/IProdService/GetProductsAccordingToSellerResponse")]
        Commonlayer.Views.ProductView[] GetProductsAccordingToSeller(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProdService/GetProductsAccordingToSeller", ReplyAction="http://tempuri.org/IProdService/GetProductsAccordingToSellerResponse")]
        System.Threading.Tasks.Task<Commonlayer.Views.ProductView[]> GetProductsAccordingToSellerAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProdService/MarkActive", ReplyAction="http://tempuri.org/IProdService/MarkActiveResponse")]
        void MarkActive(int productid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProdService/MarkActive", ReplyAction="http://tempuri.org/IProdService/MarkActiveResponse")]
        System.Threading.Tasks.Task MarkActiveAsync(int productid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProdService/getSubCategories", ReplyAction="http://tempuri.org/IProdService/getSubCategoriesResponse")]
        Commonlayer.Views.CategoryView[] getSubCategories();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProdService/getSubCategories", ReplyAction="http://tempuri.org/IProdService/getSubCategoriesResponse")]
        System.Threading.Tasks.Task<Commonlayer.Views.CategoryView[]> getSubCategoriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProdService/getMainCategories", ReplyAction="http://tempuri.org/IProdService/getMainCategoriesResponse")]
        Commonlayer.Views.CategoryView[] getMainCategories();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProdService/getMainCategories", ReplyAction="http://tempuri.org/IProdService/getMainCategoriesResponse")]
        System.Threading.Tasks.Task<Commonlayer.Views.CategoryView[]> getMainCategoriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProdService/getSubCategoryofProduct", ReplyAction="http://tempuri.org/IProdService/getSubCategoryofProductResponse")]
        string getSubCategoryofProduct(int ProductID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProdService/getSubCategoryofProduct", ReplyAction="http://tempuri.org/IProdService/getSubCategoryofProductResponse")]
        System.Threading.Tasks.Task<string> getSubCategoryofProductAsync(int ProductID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProdServiceChannel : TraderMarket.ProdService.IProdService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProdServiceClient : System.ServiceModel.ClientBase<TraderMarket.ProdService.IProdService>, TraderMarket.ProdService.IProdService {
        
        public ProdServiceClient() {
        }
        
        public ProdServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProdServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProdServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProdServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Commonlayer.Views.ProductView[] GetProducts() {
            return base.Channel.GetProducts();
        }
        
        public System.Threading.Tasks.Task<Commonlayer.Views.ProductView[]> GetProductsAsync() {
            return base.Channel.GetProductsAsync();
        }
        
        public Commonlayer.Product GetProduct(int id) {
            return base.Channel.GetProduct(id);
        }
        
        public System.Threading.Tasks.Task<Commonlayer.Product> GetProductAsync(int id) {
            return base.Channel.GetProductAsync(id);
        }
        
        public Commonlayer.Views.ProductView[] GetProductsAccordingToSubCategory(System.Nullable<int> CatID) {
            return base.Channel.GetProductsAccordingToSubCategory(CatID);
        }
        
        public System.Threading.Tasks.Task<Commonlayer.Views.ProductView[]> GetProductsAccordingToSubCategoryAsync(System.Nullable<int> CatID) {
            return base.Channel.GetProductsAccordingToSubCategoryAsync(CatID);
        }
        
        public Commonlayer.Views.CategoryView[] GetCategories() {
            return base.Channel.GetCategories();
        }
        
        public System.Threading.Tasks.Task<Commonlayer.Views.CategoryView[]> GetCategoriesAsync() {
            return base.Channel.GetCategoriesAsync();
        }
        
        public void ControlStock(int productid, int stock) {
            base.Channel.ControlStock(productid, stock);
        }
        
        public System.Threading.Tasks.Task ControlStockAsync(int productid, int stock) {
            return base.Channel.ControlStockAsync(productid, stock);
        }
        
        public void AddProducttoCart(string username, int productId, int qty) {
            base.Channel.AddProducttoCart(username, productId, qty);
        }
        
        public System.Threading.Tasks.Task AddProducttoCartAsync(string username, int productId, int qty) {
            return base.Channel.AddProducttoCartAsync(username, productId, qty);
        }
        
        public Commonlayer.Views.ShoppingCartView[] GetProductsinShoppingCart(string Username) {
            return base.Channel.GetProductsinShoppingCart(Username);
        }
        
        public System.Threading.Tasks.Task<Commonlayer.Views.ShoppingCartView[]> GetProductsinShoppingCartAsync(string Username) {
            return base.Channel.GetProductsinShoppingCartAsync(Username);
        }
        
        public void UpdateCart(string username, int productId, int newQty) {
            base.Channel.UpdateCart(username, productId, newQty);
        }
        
        public System.Threading.Tasks.Task UpdateCartAsync(string username, int productId, int newQty) {
            return base.Channel.UpdateCartAsync(username, productId, newQty);
        }
        
        public void DecrementCart(string username, int productId) {
            base.Channel.DecrementCart(username, productId);
        }
        
        public System.Threading.Tasks.Task DecrementCartAsync(string username, int productId) {
            return base.Channel.DecrementCartAsync(username, productId);
        }
        
        public void DeleteShoppingCartEntry(string username, int productid) {
            base.Channel.DeleteShoppingCartEntry(username, productid);
        }
        
        public System.Threading.Tasks.Task DeleteShoppingCartEntryAsync(string username, int productid) {
            return base.Channel.DeleteShoppingCartEntryAsync(username, productid);
        }
        
        public Commonlayer.Views.ProductView GetProductV(int id) {
            return base.Channel.GetProductV(id);
        }
        
        public System.Threading.Tasks.Task<Commonlayer.Views.ProductView> GetProductVAsync(int id) {
            return base.Channel.GetProductVAsync(id);
        }
        
        public int GetProductID(string name) {
            return base.Channel.GetProductID(name);
        }
        
        public System.Threading.Tasks.Task<int> GetProductIDAsync(string name) {
            return base.Channel.GetProductIDAsync(name);
        }
        
        public bool CheckStock(int productid, int stock) {
            return base.Channel.CheckStock(productid, stock);
        }
        
        public System.Threading.Tasks.Task<bool> CheckStockAsync(int productid, int stock) {
            return base.Channel.CheckStockAsync(productid, stock);
        }
        
        public int GetStock(int productID) {
            return base.Channel.GetStock(productID);
        }
        
        public System.Threading.Tasks.Task<int> GetStockAsync(int productID) {
            return base.Channel.GetStockAsync(productID);
        }
        
        public Commonlayer.Views.ProductView[] GetProductsList() {
            return base.Channel.GetProductsList();
        }
        
        public System.Threading.Tasks.Task<Commonlayer.Views.ProductView[]> GetProductsListAsync() {
            return base.Channel.GetProductsListAsync();
        }
        
        public void AddProduct(string name, string desc, int catid, string imageLink, decimal price, int stock) {
            base.Channel.AddProduct(name, desc, catid, imageLink, price, stock);
        }
        
        public System.Threading.Tasks.Task AddProductAsync(string name, string desc, int catid, string imageLink, decimal price, int stock) {
            return base.Channel.AddProductAsync(name, desc, catid, imageLink, price, stock);
        }
        
        public void DeleteProduct(int productID) {
            base.Channel.DeleteProduct(productID);
        }
        
        public System.Threading.Tasks.Task DeleteProductAsync(int productID) {
            return base.Channel.DeleteProductAsync(productID);
        }
        
        public void UpdateProduct(int prodid, string name, string desc, int catid, string imageLink, decimal price, int stock) {
            base.Channel.UpdateProduct(prodid, name, desc, catid, imageLink, price, stock);
        }
        
        public System.Threading.Tasks.Task UpdateProductAsync(int prodid, string name, string desc, int catid, string imageLink, decimal price, int stock) {
            return base.Channel.UpdateProductAsync(prodid, name, desc, catid, imageLink, price, stock);
        }
        
        public Commonlayer.Views.ProductView[] GetProductsAccordingToSeller(string username) {
            return base.Channel.GetProductsAccordingToSeller(username);
        }
        
        public System.Threading.Tasks.Task<Commonlayer.Views.ProductView[]> GetProductsAccordingToSellerAsync(string username) {
            return base.Channel.GetProductsAccordingToSellerAsync(username);
        }
        
        public void MarkActive(int productid) {
            base.Channel.MarkActive(productid);
        }
        
        public System.Threading.Tasks.Task MarkActiveAsync(int productid) {
            return base.Channel.MarkActiveAsync(productid);
        }
        
        public Commonlayer.Views.CategoryView[] getSubCategories() {
            return base.Channel.getSubCategories();
        }
        
        public System.Threading.Tasks.Task<Commonlayer.Views.CategoryView[]> getSubCategoriesAsync() {
            return base.Channel.getSubCategoriesAsync();
        }
        
        public Commonlayer.Views.CategoryView[] getMainCategories() {
            return base.Channel.getMainCategories();
        }
        
        public System.Threading.Tasks.Task<Commonlayer.Views.CategoryView[]> getMainCategoriesAsync() {
            return base.Channel.getMainCategoriesAsync();
        }
        
        public string getSubCategoryofProduct(int ProductID) {
            return base.Channel.getSubCategoryofProduct(ProductID);
        }
        
        public System.Threading.Tasks.Task<string> getSubCategoryofProductAsync(int ProductID) {
            return base.Channel.getSubCategoryofProductAsync(ProductID);
        }
    }
}
