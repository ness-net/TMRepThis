//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TraderMarket.ProdService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProdService.IProdService")]
    public interface IProdService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProdService/GetProducts", ReplyAction="http://tempuri.org/IProdService/GetProductsResponse")]
        Commonlayer.Views.ProductView[] GetProducts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProdService/GetProducts", ReplyAction="http://tempuri.org/IProdService/GetProductsResponse")]
        System.Threading.Tasks.Task<Commonlayer.Views.ProductView[]> GetProductsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProdService/GetProducts1", ReplyAction="http://tempuri.org/IProdService/GetProducts1Response")]
        Commonlayer.Product[] GetProducts1();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProdService/GetProducts1", ReplyAction="http://tempuri.org/IProdService/GetProducts1Response")]
        System.Threading.Tasks.Task<Commonlayer.Product[]> GetProducts1Async();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProdService/GetProduct", ReplyAction="http://tempuri.org/IProdService/GetProductResponse")]
        Commonlayer.Product GetProduct(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProdService/GetProduct", ReplyAction="http://tempuri.org/IProdService/GetProductResponse")]
        System.Threading.Tasks.Task<Commonlayer.Product> GetProductAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProdService/GetProductsAccordingToSubCategory", ReplyAction="http://tempuri.org/IProdService/GetProductsAccordingToSubCategoryResponse")]
        Commonlayer.Views.ProductView[] GetProductsAccordingToSubCategory(System.Nullable<int> CatID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProdService/GetProductsAccordingToSubCategory", ReplyAction="http://tempuri.org/IProdService/GetProductsAccordingToSubCategoryResponse")]
        System.Threading.Tasks.Task<Commonlayer.Views.ProductView[]> GetProductsAccordingToSubCategoryAsync(System.Nullable<int> CatID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProdService/ControlStock", ReplyAction="http://tempuri.org/IProdService/ControlStockResponse")]
        void ControlStock(int productid, int stock);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProdService/ControlStock", ReplyAction="http://tempuri.org/IProdService/ControlStockResponse")]
        System.Threading.Tasks.Task ControlStockAsync(int productid, int stock);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProdService/GetProductV", ReplyAction="http://tempuri.org/IProdService/GetProductVResponse")]
        Commonlayer.Views.ProductView GetProductV(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProdService/GetProductV", ReplyAction="http://tempuri.org/IProdService/GetProductVResponse")]
        System.Threading.Tasks.Task<Commonlayer.Views.ProductView> GetProductVAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProdService/GetProductID", ReplyAction="http://tempuri.org/IProdService/GetProductIDResponse")]
        int GetProductID(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProdService/GetProductID", ReplyAction="http://tempuri.org/IProdService/GetProductIDResponse")]
        System.Threading.Tasks.Task<int> GetProductIDAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProdService/CheckStock", ReplyAction="http://tempuri.org/IProdService/CheckStockResponse")]
        bool CheckStock(int productid, int stock);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProdService/CheckStock", ReplyAction="http://tempuri.org/IProdService/CheckStockResponse")]
        System.Threading.Tasks.Task<bool> CheckStockAsync(int productid, int stock);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProdService/GetStock", ReplyAction="http://tempuri.org/IProdService/GetStockResponse")]
        int GetStock(int productID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProdService/GetStock", ReplyAction="http://tempuri.org/IProdService/GetStockResponse")]
        System.Threading.Tasks.Task<int> GetStockAsync(int productID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProdService/GetProductsList", ReplyAction="http://tempuri.org/IProdService/GetProductsListResponse")]
        Commonlayer.Views.ProductView[] GetProductsList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProdService/GetProductsList", ReplyAction="http://tempuri.org/IProdService/GetProductsListResponse")]
        System.Threading.Tasks.Task<Commonlayer.Views.ProductView[]> GetProductsListAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProdServiceChannel : TraderMarket.ProdService.IProdService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProdServiceClient : System.ServiceModel.ClientBase<TraderMarket.ProdService.IProdService>, TraderMarket.ProdService.IProdService {
        
        public ProdServiceClient() {
        }
        
        public ProdServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProdServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProdServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProdServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Commonlayer.Views.ProductView[] GetProducts() {
            return base.Channel.GetProducts();
        }
        
        public System.Threading.Tasks.Task<Commonlayer.Views.ProductView[]> GetProductsAsync() {
            return base.Channel.GetProductsAsync();
        }
        
        public Commonlayer.Product[] GetProducts1() {
            return base.Channel.GetProducts1();
        }
        
        public System.Threading.Tasks.Task<Commonlayer.Product[]> GetProducts1Async() {
            return base.Channel.GetProducts1Async();
        }
        
        public Commonlayer.Product GetProduct(int id) {
            return base.Channel.GetProduct(id);
        }
        
        public System.Threading.Tasks.Task<Commonlayer.Product> GetProductAsync(int id) {
            return base.Channel.GetProductAsync(id);
        }
        
        public Commonlayer.Views.ProductView[] GetProductsAccordingToSubCategory(System.Nullable<int> CatID) {
            return base.Channel.GetProductsAccordingToSubCategory(CatID);
        }
        
        public System.Threading.Tasks.Task<Commonlayer.Views.ProductView[]> GetProductsAccordingToSubCategoryAsync(System.Nullable<int> CatID) {
            return base.Channel.GetProductsAccordingToSubCategoryAsync(CatID);
        }
        
        public void ControlStock(int productid, int stock) {
            base.Channel.ControlStock(productid, stock);
        }
        
        public System.Threading.Tasks.Task ControlStockAsync(int productid, int stock) {
            return base.Channel.ControlStockAsync(productid, stock);
        }
        
        public Commonlayer.Views.ProductView GetProductV(int id) {
            return base.Channel.GetProductV(id);
        }
        
        public System.Threading.Tasks.Task<Commonlayer.Views.ProductView> GetProductVAsync(int id) {
            return base.Channel.GetProductVAsync(id);
        }
        
        public int GetProductID(string name) {
            return base.Channel.GetProductID(name);
        }
        
        public System.Threading.Tasks.Task<int> GetProductIDAsync(string name) {
            return base.Channel.GetProductIDAsync(name);
        }
        
        public bool CheckStock(int productid, int stock) {
            return base.Channel.CheckStock(productid, stock);
        }
        
        public System.Threading.Tasks.Task<bool> CheckStockAsync(int productid, int stock) {
            return base.Channel.CheckStockAsync(productid, stock);
        }
        
        public int GetStock(int productID) {
            return base.Channel.GetStock(productID);
        }
        
        public System.Threading.Tasks.Task<int> GetStockAsync(int productID) {
            return base.Channel.GetStockAsync(productID);
        }
        
        public Commonlayer.Views.ProductView[] GetProductsList() {
            return base.Channel.GetProductsList();
        }
        
        public System.Threading.Tasks.Task<Commonlayer.Views.ProductView[]> GetProductsListAsync() {
            return base.Channel.GetProductsListAsync();
        }
    }
}
