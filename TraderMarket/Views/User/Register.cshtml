@model TraderMarket.Models.RegisterModel

@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@ViewBag.Message</h2>
<script src="../../Scripts/jquery.unobtrusive-ajax.js" type="text/javascript"></script>
<script src="../../Scripts/jquery.unobtrusive-ajax.min.js" type="text/javascript"></script>
<script src="~/Scripts/jquery-1.5.1.min.js"></script>
<script type="text/javascript">

    //var seller = false;
    //var buyer = false;

    $(document).ready(function () {
        document.getElementById("submit").disabled = true;

       
    });

    //function OnChangeBuyer()
    //{
    //    buyer = !buyer;
    //    var div = document.getElementById("detailsinfo");

    //    if (buyer == false && seller == false) {
    //        div.innerHTML = "";
    //    }
    //    else if (buyer == true && seller == false) {
    //        div.innerHTML = "Fill the buyer section";
    //    }
    //    else if (buyer == false && seller == true) {
    //        div.innerHTML = "Fill the seller section"
    //    }
    //    else if (buyer == true && seller == true) {
    //        div.innerHTML = "Fill Both Seller and Buyer section"
    //    }
    //}

    //function OnChangeSeller() {
    //    var div = document.getElementById("detailsinfo");
    //    if (buyer == false && seller == false) {
    //        div.innerHTML = "";
    //    }
    //    else if (buyer == true && seller == false) {
    //        div.innerHTML = "Fill the buyer section";
    //    }
    //    else if (buyer == false && seller == true) {
    //        div.innerHTML = "Fill Seller section"
    //    }
    //    else if (buyer == true && seller == true) {
    //        div.innerHTML = "Fill Both Seller and Buyer section"
    //    }
    //}

    //function Buyer() {        

    //    $("#BuyerReg").show("slow");
    //    $("#SellerReg").hide("slow")();
    //}

    //function Seller() {

    //    $("#SellerReg").show("slow");
    //    $("#BuyerReg").hide("slow")();
    //}

    function checkPass() {
        var password = $("#EDPassword").val();
        var message = document.getElementById('confirmMessage');
        var mediumRegex = new RegExp("^(?=.{7,})(((?=.*[A-Z])(?=.*[a-z]))|((?=.*[A-Z])(?=.*[0-9]))|((?=.*[a-z])(?=.*[0-9]))).*$", "g");
        var goodColor = "#66cc66";
        var badColor = "#ff6666";
        if (mediumRegex.test(password) == false)
        {
            message.style.color = badColor;
            message.innerHTML = "Password is too weak!";
        }
        else {
            message.style.color = goodColor;
            message.innerHTML = "Passwords is good!"
            document.getElementById("submit").disabled = false;
        }
    }


    </script>

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>Register</legend>


        <div class="editor-label">
            @Html.LabelFor(model => model.username)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.username)
            @Html.ValidationMessageFor(model => model.username)
        </div>
        <br />
        <div class="editor-label">
            @Html.LabelFor(model => model.password)
        </div>
        <div class="editor-field">
            @Html.PasswordFor(model => model.password, new { @onkeyup = "checkPass(); return false;", id = "EDPassword" }) 
            <span id="confirmMessage"></span>
            @Html.ValidationMessageFor(model => model.password)
        </div>
        <br />
        <div class="editor-label">
            @Html.LabelFor(model => model.email)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.email)
            @Html.ValidationMessageFor(model => model.email)
        </div>
        <br />
        <div class="editor-label">
            @Html.LabelFor(model => model.name)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.name)
            @Html.ValidationMessageFor(model => model.name)
        </div>
        <br />
        <div class="editor-label">
            @Html.LabelFor(model => model.surname)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.surname)
            @Html.ValidationMessageFor(model => model.surname)
        </div>
        <br />
        
        <div class="editor-label">
            @Html.LabelFor(model => model.contactno)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.contactno)
            @Html.ValidationMessageFor(model => model.contactno)
        </div>
        <br />
        
        <div class="editor-field">
            @Html.CheckBoxFor(model => model.buyer) @Html.LabelFor(model => model.buyer)     @Html.CheckBoxFor(model => model.seller) @Html.LabelFor(model => model.seller)
          </div><div id="detailsinfo"></div>
             <br /><br />

        @Html.Raw(Html.GenerateCaptcha())
        @Html.ValidationMessage("captcha")


<br />

<p>
    <input type="submit" value="Create Account" id="submit" />

</p>
</fieldset>
}


